@page "/"
@inject IBoardGameRepository _boardGameRepo;
@inject IDialogService _dialogService;

<PageTitle>Index</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudButton @onclick="OpenUserDialog" Variant="Variant.Filled" Color="Color.Primary" 
        StartIcon="@Icons.Material.Rounded.GroupAdd" Size="Size.Large">
        Create Session
    </MudButton>
    <MudButton @onclick="OpenSessionDialog" Variant="Variant.Filled" Color="Color.Primary" 
        StartIcon="@Icons.Material.Rounded.Hail" Size="Size.Large">
        Join Session
    </MudButton>

    @if(GamesAreLoading)
    {
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
    }

    @if(GamesInSession.Count() > 0 && CurrentSession.SessionId != -1) 
    {
        @foreach(var game in GamesInSession)
        {
            <BoardGameComponent GameToDisplay="@game" />
        }
    }
</MudContainer>

@code 
{
    public List<BoardGame> GamesInSession = new List<BoardGame>();
    
    public GamePickingSession CurrentSession = new GamePickingSession();

    public bool GamesAreLoading = false;

    public async Task OpenUserDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await _dialogService.ShowAsync<UserDialog>("Whose library?", options);
        var dialogResult = await dialog.Result;

        if(!dialogResult.Canceled)
        {
            var bggUser = dialogResult.Data.ToString();

            GamesAreLoading = true;
            StateHasChanged();

            var userCollection = await _boardGameRepo.GetCollection(bggUser);            
            GamesInSession = BoardGameMapper.MapFromCollection(userCollection).ToList();
            CurrentSession = new GamePickingSession(100);

            GamesAreLoading = false;
            StateHasChanged();
        }
    }

    public void OpenSessionDialog() 
    {
        // TODO - This is almost exactly the same as the user dialog (including the actual dialog file). Generalize.
        var options = new DialogOptions { CloseOnEscapeKey = true };
        _dialogService.Show<SessionDialog>("Which session?", options);
    }
}